#nullable enable
Microsoft.AspNetCore.Builder.OutputCachingExtensions
Microsoft.AspNetCore.OutputCaching.DefaultOutputCachePolicy
Microsoft.AspNetCore.OutputCaching.DefaultOutputCachePolicy.DefaultOutputCachePolicy() -> void
Microsoft.AspNetCore.OutputCaching.DefaultOutputCachePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.DefaultOutputCachePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.DefaultOutputCachePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy
Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy.EnableCachingPolicy() -> void
Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ExpirationPolicy
Microsoft.AspNetCore.OutputCaching.ExpirationPolicy.ExpirationPolicy(System.TimeSpan expiration) -> void
Microsoft.AspNetCore.OutputCaching.ExpirationPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ExpirationPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ExpirationPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.LockingPolicy
Microsoft.AspNetCore.OutputCaching.LockingPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.LockingPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.LockingPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.NoStorePolicy
Microsoft.AspNetCore.OutputCaching.NoStorePolicy.NoStorePolicy() -> void
Microsoft.AspNetCore.OutputCaching.NoStorePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.NoStorePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.NoStorePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Duration.get -> int
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Duration.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.NoStore.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.NoStore.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.OutputCacheAttribute() -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Policies.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy!>!
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Profile.get -> string?
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Profile.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByQueryKeys.get -> string![]?
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByQueryKeys.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Build() -> Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Clear() -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Expires(System.TimeSpan expiration) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Lock(bool lockResponse = true) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Method(params string![]! methods) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Method(string! method) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.NoStore() -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.OutputCachePolicyBuilder() -> void
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Path(Microsoft.AspNetCore.Http.PathString pathBase) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Path(params Microsoft.AspNetCore.Http.PathString[]! pathBases) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Profile(string! profileName) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Tag(params string![]! tags) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByQuery(params string![]! queryKeys) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<(string!, string!)>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<System.Threading.Tasks.Task<(string!, string!)>!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<System.Threading.Tasks.Task<string!>!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<string!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.When(System.Func<Microsoft.AspNetCore.OutputCaching.IOutputCachingContext!, System.Threading.Tasks.Task<bool>!>! predicate) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachingFeature
Microsoft.AspNetCore.OutputCaching.OutputCachingFeature.Context.get -> Microsoft.AspNetCore.OutputCaching.IOutputCachingContext!
Microsoft.AspNetCore.OutputCaching.OutputCachingFeature.OutputCachingFeature(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingFeature.Policies.get -> System.Collections.Generic.List<Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy!>!
Microsoft.AspNetCore.OutputCaching.OutputCachingMiddleware
Microsoft.AspNetCore.OutputCaching.OutputCachingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext! httpContext) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.OutputCachingMiddleware.OutputCachingMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.OutputCaching.OutputCachingOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, Microsoft.AspNetCore.OutputCaching.IOutputCacheStore! outputCache, Microsoft.Extensions.ObjectPool.ObjectPoolProvider! poolProvider) -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.DefaultExpirationTimeSpan.get -> System.TimeSpan
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.DefaultExpirationTimeSpan.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.MaximumBodySize.get -> long
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.MaximumBodySize.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.OutputCachingOptions() -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.Policies.get -> System.Collections.Generic.List<Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy!>!
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.Profiles.get -> System.Collections.Generic.IDictionary<string!, Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy!>!
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.SizeLimit.get -> long
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.SizeLimit.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.UseCaseSensitivePaths.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCachingOptions.UseCaseSensitivePaths.set -> void
Microsoft.AspNetCore.OutputCaching.Policies.CompositePolicy
Microsoft.AspNetCore.OutputCaching.Policies.CompositePolicy.CompositePolicy(params Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy![]! policies) -> void
Microsoft.AspNetCore.OutputCaching.Policies.CompositePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.CompositePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.CompositePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.PolicyExtensions
Microsoft.AspNetCore.OutputCaching.Policies.PredicatePolicy
Microsoft.AspNetCore.OutputCaching.Policies.PredicatePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.PredicatePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.PredicatePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.Policies.PredicatePolicy.PredicatePolicy(System.Func<Microsoft.AspNetCore.OutputCaching.IOutputCachingContext!, System.Threading.Tasks.Task<bool>!>! predicate, Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy! policy) -> void
Microsoft.AspNetCore.OutputCaching.ProfilePolicy
Microsoft.AspNetCore.OutputCaching.ProfilePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ProfilePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ProfilePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ProfilePolicy.ProfilePolicy(string! profileName) -> void
Microsoft.AspNetCore.OutputCaching.ResponseCachingPolicy
Microsoft.AspNetCore.OutputCaching.ResponseCachingPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ResponseCachingPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ResponseCachingPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.ResponseCachingPolicy.ResponseCachingPolicy() -> void
Microsoft.AspNetCore.OutputCaching.TagsPolicy
Microsoft.AspNetCore.OutputCaching.TagsPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.TagsPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.TagsPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.TagsPolicy.TagsPolicy(params string![]! tags) -> void
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.VaryByQueryPolicy() -> void
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.VaryByQueryPolicy(params string![]! queryKeys) -> void
Microsoft.AspNetCore.OutputCaching.VaryByQueryPolicy.VaryByQueryPolicy(string! queryKey) -> void
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.IOutputCachingContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.VaryByValuePolicy() -> void
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.VaryByValuePolicy(System.Func<(string!, string!)>! varyBy) -> void
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.VaryByValuePolicy(System.Func<System.Threading.Tasks.Task<(string!, string!)>!>! varyBy) -> void
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.VaryByValuePolicy(System.Func<System.Threading.Tasks.Task<string!>!>! varyBy) -> void
Microsoft.AspNetCore.OutputCaching.VaryByValuePolicy.VaryByValuePolicy(System.Func<string!>! varyBy) -> void
Microsoft.Extensions.DependencyInjection.OutputCachingServicesExtensions
static Microsoft.AspNetCore.Builder.OutputCachingExtensions.UseOutputCaching(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy.Instance -> Microsoft.AspNetCore.OutputCaching.EnableCachingPolicy!
static Microsoft.AspNetCore.OutputCaching.Policies.PolicyExtensions.OutputCache<TBuilder>(this TBuilder builder) -> TBuilder
static Microsoft.AspNetCore.OutputCaching.Policies.PolicyExtensions.OutputCache<TBuilder>(this TBuilder builder, System.Action<Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!>! policy) -> TBuilder
static Microsoft.AspNetCore.OutputCaching.Policies.PolicyExtensions.OutputCache<TBuilder>(this TBuilder builder, params Microsoft.AspNetCore.OutputCaching.IOutputCachingPolicy![]! items) -> TBuilder
static Microsoft.Extensions.DependencyInjection.OutputCachingServicesExtensions.AddOutputCaching(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Microsoft.Extensions.DependencyInjection.OutputCachingServicesExtensions.AddOutputCaching(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.OutputCaching.OutputCachingOptions!>! configureOptions) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static readonly Microsoft.AspNetCore.OutputCaching.LockingPolicy.Disabled -> Microsoft.AspNetCore.OutputCaching.LockingPolicy!
static readonly Microsoft.AspNetCore.OutputCaching.LockingPolicy.Enabled -> Microsoft.AspNetCore.OutputCaching.LockingPolicy!
